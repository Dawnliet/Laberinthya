using System; //Laberyntia

class Program
{
    static void Main()
    {
        Inicializar(); 
    }

    static void Inicializar()
    {
        Console.WriteLine("Bienvenidos al mundo de Laberinthya, un juego de laberinto donde tu objetivo es llegar a la meta antes de que tu rival lo haga.");
        Console.WriteLine("");
        Console.WriteLine("Lo primero que debemos hacer es escribir la cantidad de jugadores que nos acompañan (2-3)");
        bool validar = false;
        int jugadores = Validar(validar);

        while (jugadores < 2 || jugadores > 3)
        {
            Console.WriteLine("Cantidad incorrecta, escribe nuevamente la cantidad de jugadores (2-3)");
            jugadores = Validar_int(validar);
        }

        List<Player> players = new List<Player>();

        for (int i = 1; i <= jugadores; i++)
        {
            Console.WriteLine($"Jugador {i}:");
            players.Add(new Player());
        }

        for (int i = 0; i < players.Count; i++)
        {
            Console.WriteLine($"Los datos del jugador {i + 1} son los siguientes: {players[i].Inf}");
        }

        Console.WriteLine("");
        Console.WriteLine("Todo listo, comencemos");

        Board tablero = new Board(); 

         //Mantener la consola abierta
         Console.ReadLine(); 
     
    }
    public static int Validar_int( bool entrada)
    {
        if (entrada == false)
        {
            int i = 0;
            try 
            {
                i = int.Parse(Console.ReadLine());
            }
            catch(Exception ex)
            {
                Console.WriteLine("La opción elegida debe ser un numero entero. Intenta otra vez");
                return Validar_int(entrada);
            }
            return i;
        }
        else return 0;
    }
    public static string Validar_string(bool entrada)
    {
        if (entrada == false)
        {
            string i = "a";
            try
            {
                i = Console.ReadLine();
            }
            catch(Exception ex)
            {
                Console.WriteLine("La opción elegida debe ser una cadena de caracteres. Intenta otra vez");
                return Validar_string(entrada);
            }
            return i;
        }
        else return "b";
    }
}

public class Player
{
    // Atributos
    private string nombre;
    private string empleo;
    private int velocidad;
    private string habilidad_1;
    private string habilidad_2;
    private string habilidad_Especial;

    //Propiedades
    public string NOMBRE
    {
        get {return nombre;}
        set {nombre = value;}
    }
        public string EMPLEO
    {
        get {return empleo;}
        set {empleo = value;}
    }
        public int VELOCIDAD
    {
        get {return velocidad;}
        set {velocidad = value;}
    }
        public string HABILIDAD_1
    {
        get {return habilidad_1;}
        set {habilidad_1 = value;}
    }
        public string HABILIDAD_2
    {
        get {return habilidad_2;}
        set {habilidad_2 = value;}
    }
        public string HABILIDAD_ESPECIAL
    {
        get {return habilidad_Especial;}
        set {habilidad_Especial = value;}
    }
    
    // Constructor
    public Player()
    {
        bool validar = false;
        Dar_nombre(validar);
        Dar_empleo(validar);
        Dar_habilidades(validar);
    }  

    //Metodos

   public void Dar_nombre(bool entrada)
   {
      Console.WriteLine("Escribe el nombre de este jugador");
      nombre = Program.Validar_string(entrada);
   }
   public void Dar_empleo(bool entrada)
   {
       Console.WriteLine("Ahora elija su empleo");
       Console.WriteLine("");
       Console.WriteLine("1 Explorador (velocidad 3)");
       Console.WriteLine("Habilidad especial (Manitas): Convierte una trampa o un cofre en bonificaciones (Enfriamiento 2 turnos)"); 
       Console.WriteLine("");
       Console.WriteLine("2 Buscatesoros (velocidad 4)"); 
       Console.WriteLine("Habilidad especial (Robo): Roba 2 de velocidad a un jugador cercano por 1 turno (Enfriamiento 10 turnos)");
       Console.WriteLine("");
       Console.WriteLine("3 Minero (velocidad 3)");
       Console.WriteLine("Habilidad especial (Derrumbe): Destruye maximo 2 trampas que esten cerca y aleja dos casillas a los jugadores cercanos (Enfriamiento 10 turnos)");
       Console.WriteLine("");
       Console.WriteLine("4 ()");
       Console.WriteLine("Habilidad especial()");
       Console.WriteLine("");
       Console.WriteLine("5 ()");
       Console.WriteLine("Habilidad especial()");


       int empleo = Program.Validar_int(entrada);

       while (empleo < 1 || empleo > 5)
       {
        Console.WriteLine("Opcion incorrecta. Elije una opcion correcta");
        empleo = Program.Validar_int(entrada);
       }

       switch (empleo)
       {
            case 1:
                empleo = "Explorador";
                velocidad = 3;
                habilidad_Especial = "Manitas"; //Convierte una trampa o un cofre en bonificaciones (Enfriamiento 2 turnos)
                break;
            case 2:
                empleo = "Buscatesoros";
                velocidad = 4;
                habilidad_Especial = "Robo"; //Roba 2 de velocidad a un jugador cercano por 1 turno (Enfriamiento 10 turnos)
                break;
            case 3:
                empleo = "Minero";
                velocidad = 3;
                habilidad_Especial = "Derrumbe"; //Destruye maximo 2 trampas que esten cerca y aleja dos casillas a los jugadores cercanos (Enfriamiento 10 turnos)
                break;
            case 4:
                empleo = "";
                velocidad = 3;
                habilidad_Especial = "Manitas"; //Convierte una trampa o un cofre en bonificaciones (Enfriamiento 2 turnos)
                break;
            case 5:
                empleo = "";
                velocidad = 3;
                habilidad_Especial = "Manitas"; //Convierte una trampa o un cofre en bonificaciones (Enfriamiento 2 turnos)
            break;                
       }
   }

   public void Dar_habilidades(bool entrada)
   {
     //Habilidades
      Console.WriteLine ("Por ultimo, elige dos habilidades distintas de entre las siguientes ");
      Console.WriteLine ("1 Carrera (Aumenta tu velocidad en 2 este turno)(Enfriamiento 4 turnos)");
      Console.WriteLine ("2 Descanso (Restaura el Enfriamiento de tu otra habilidad)(Enfriamiento 8 turnos)");
      Console.WriteLine ("3 Salto (Te trasladas 2 casillas sin importar si hay trampas)(Enfriamiento 3 turnos)");
      Console.WriteLine ("4 Empuje (Alejas a un jugador cercarno una casilla)(Enfriamiento 3 turnos)");

        int habilidad_1 = Program.Validar_int(entrada);
        int habilidad_2 = Program.Validar_int(entrada);

        while (habilidad_1 < 0|| habilidad_1 > 4|| habilidad_2 < 0|| habilidad_2 > 4 || habilidad_1 == habilidad_2)
        {
            Console.WriteLine("Habilidades incorrectas, elige nuevamente");

            habilidad_1 = Program.Validar_int(entrada);
            habilidad_2 = Program.Validar_int(entrada);
        }

        switch (habilidad_1)
        {
            case 1:
            habilidad_1 = "Carrera";
            break;

            case 2:
            habilidad_1 = "Descanso";
            break;

            case 3:
            habilidad_1 = "Salto";
            break;

            case 4:
            habilidad_1 = "Empuje";
            break;
        }
        switch (habilidad_2)
        {
            case 1:
            habilidad_2 = "Carrera";
            break;

            case 2:
            habilidad_2 = "Descanso";
            break;

            case 3:
            habilidad_2 = "Salto";
            break;

            case 4:
            habilidad_2 = "Empuje";
            break;
        }
    }

   public void Info()
   {
    Console.WriteLine($"Nombre: {NOMBRE}");
    Console.WriteLine($"Empleo: {EMPLEO}");
    Console.WriteLine($"Velocidad: {VELOCIDAD}");
    Console.WriteLine($"Habilidad 1: {HABILIDAD_1}");
    Console.WriteLine($"Habilidad 2: {HABILIDAD_2}");
    Console.WriteLine($"Habilidad Especial: {HABILIDAD_ESPECIAL}");
   } 
}

class Board
{    
    public Board()
    {
        int [,] tablero = new int [8,8];
        Iniciar_Tablero();
        Mostrar_Tablero();
    }

    static void Iniciar_Tablero()
    {
        for (int fil = 0; fil < 8; fil ++)
        {
            for (int col = 0; col < 8; col ++)
            {
                if ( fil < 3)
                {
                    tablero [fil,col] = 1; 
                }
                else if (fil > 4)
                {
                    tablero [fil, col] = 2;
                }
            }
        }
    }

    static void Mostrar_Tablero()
    {
        Console.Clear();
        for (int fil = 0; fil < 8; fil ++)
        {
            for (int col = 0; col < 8; col ++)
            {
                if ( tablero [fil,col] == 0)
                {
                    Console.WriteLine(".");
                }
                else if ( tablero [fil,col] == 1 )
                {
                    Console.WriteLine("X");
                }
                else if ( tablero [fil,col] == 2 )
                {
                    Console.WriteLine("O");
                }
            }
        }
    }
}  
